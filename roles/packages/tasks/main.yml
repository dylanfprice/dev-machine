- name: install packages
  apt:
    force_apt_get: yes
    state: latest
    update_cache: yes
    name:
      - awscli
      - curl
      - firefox
      - git
      - gnumeric
      - lastpass-cli
      - libnotify-bin
      - libpq-dev
      - pandoc
      - parallel
      - pavucontrol
      - python3
      - python3-dev
      - python3-pip
      - python3-venv
      - silversearcher-ag
      - texlive-latex-recommended
      - texlive-fonts-recommended
      - tmux
      - tree
      - vim
      - vim-gui-common
      - wmctrl
      - xclip

- name: install tridactyl native messenger
  become: yes
  become_user: '{{ ansible_env.USER }}'
  shell: curl -fsSl https://raw.githubusercontent.com/tridactyl/tridactyl/master/native/install.sh | bash
  args:
    creates: '{{ ansible_env.HOME }}/.mozilla/native-messaging-hosts/tridactyl.json'

- name: install pip packages
  become: yes
  become_user: '{{ ansible_env.USER }}'
  pip:
    state: latest
    executable: pip3
    extra_args: --user
    name: pipx

- name: install pipx packages
  become: yes
  become_user: '{{ ansible_env.USER }}'
  command: pipx install {{ item }}
  args:
    creates: '{{ ansible_env.HOME }}/.local/pipx/venvs/{{ item }}'
  with_items:
    - mkdocs
    - poetry
    - tox

- name: install jupyter with pipx
  become: yes
  become_user: '{{ ansible_env.USER }}'
  command: pipx install --include-deps jupyter
  args:
    creates: '{{ ansible_env.HOME }}/.local/pipx/venvs/jupyter'

- name: install jupyterlab
  become: yes
  become_user: '{{ ansible_env.USER }}'
  command: pipx inject jupyter jupyterlab --include-apps
  args:
    creates: '{{ ansible_env.HOME }}/.local/pipx/venvs/jupyter/bin/jupyter-lab'

- name: install jupyterlab vim extension
  become: yes
  become_user: '{{ ansible_env.USER }}'
  command: jupyter-labextension install jupyterlab_vim
  args:
    creates: '{{ ansible_env.HOME }}/.local/pipx/venvs/jupyter/share/jupyter/lab/extensions/jupyterlab_vim*'

- name: fzf | clone repo
  git: repo=https://github.com/junegunn/fzf.git dest={{ ansible_env.HOME }}/.fzf depth=1

- name: fzf | install
  command: '{{ ansible_env.HOME }}/.fzf/install' 
  args:
    creates: '{{ ansible_env.HOME }}/.fzf/bin/fzf'

- name: fzf | link into home bin
  file: src={{ ansible_env.HOME }}/.fzf/bin/{{ item }} dest={{ ansible_env.HOME }}/.local/bin/{{ item }} state=link
  with_items:
    - fzf
    - fzf-tmux

- name: install leiningen
  command: bash -c "cd /usr/local/bin && curl -fsSLo lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein && chmod 755 lein"
           creates=/usr/local/bin/lein

- name: install boot
  command: bash -c "cd /usr/local/bin && curl -fsSLo boot https://github.com/boot-clj/boot-bin/releases/download/latest/boot.sh && chmod 755 boot"
           creates=/usr/local/bin/boot

- name: install Terraform
  unarchive:
    src: https://releases.hashicorp.com/terraform/0.12.5/terraform_0.12.5_linux_amd64.zip
    remote_src: yes
    dest: /usr/local/bin
    mode: 0555
    creates: /usr/local/bin/terraform

- name: install gdrive
  get_url:
    url: https://github.com/gdrive-org/gdrive/releases/download/2.1.0/gdrive-linux-x64
    dest: /usr/local/bin/gdrive
    mode: 0555

- name: install jmespath
  get_url:
    url: https://github.com/jmespath/jp/releases/download/0.1.3/jp-linux-amd64
    dest: /usr/local/bin/jp
    mode: 0555
