#!/bin/bash
# From: https://git.sr.ht/~oscarcp/ghostfiles/tree/master/sway_wm/scripts/sway_bar.sh

function print_statusbar() {
    #############
    # Variables
    #############

    # Date and time
    date_and_week=$(date "+%a, %b %d")
    current_time=$(date "+%H:%M")


    #############
    # Commands
    #############

    # Battery or charger
    battery_charge=$(echo "\
        100 *\
        $(cat /sys/class/power_supply/BAT0/charge_now) /\
        $(cat /sys/class/power_supply/BAT0/charge_full)\
    " | bc)
    battery_status=$(cat /sys/class/power_supply/BAT0/status)

    # Audio and multimedia
    getdefaultsinkname() {
        pactl info | awk -F": " '/^Default Sink: /{print $2}'
    }
    audio_volume=$(
        pactl list sinks |
        awk '/Name: /{indefault = $2 == "'$(getdefaultsinkname)'"}
             /\tVolume: / && indefault {print $5; exit}'
    )
    audio_is_muted=$(
        pactl list sinks |
        awk '/Name: /{indefault = $2 == "'$(getdefaultsinkname)'"}
             /Mute: / && indefault {print $2; exit}'
    )

    # Network
    network=$(ip route get 1.1.1.1 | grep -Po '(?<=dev\s)\w+' | cut -f1 -d ' ')

    # Others
    loadavg_5min=$(cat /proc/loadavg | awk -F ' ' '{print $2}')

    if [ $battery_status = "Discharging" ];
    then
        battery_pluggedin='⚠'
    else
        battery_pluggedin='⚡'
    fi

    if ! [ $network ]
    then
       network_active="⛔"
    else
       network_active="⇆"
    fi

    if [ $audio_is_muted = "yes" ]
    then
        audio_active='🔇'
    else
        audio_active='🔊'
    fi


    #############
    # Status Line
    #############

    echo "🕘 $date_and_week $current_time | $audio_active $audio_volume | $battery_pluggedin ${battery_charge}% | $network_active | 🏋$loadavg_5min |"


    #############
    # Alerts
    #############

    if (( ${battery_charge:-1} < 6 )) && [ $battery_status = "discharging" ]
    then
        notify-send \
            --urgency=critical \
            "Battery Low!" \
            "Battery below $battery_charge. Computer will suspend soon if not plugged in."
    elif (( ${battery_charge:-1} < 3 )) && [ $battery_status = "discharging" ]
    then
        notify-send --urgency=critical "Battery Low!" "Suspending..."
        systemctl suspend
    fi
}

trap print_statusbar SIGHUP

while print_statusbar
do
    sleep 1 &
    wait $!
done
